# -*- mode: fvwm -*-
##################################
#  ____________________________
# (   _________________________)
#  ) (__  _  _  _    _
# (   __)( \/ )( \/\/ )/\/\
#  ) (    \  /  \    //    \
# (___)    \/    \/\/(_/\/\_) 2.6
#
#
#  This is the default configuration file shipped with fvwm.
#
#  This config file is organized as follows:
#
#    1: Functions
#    2: Styles
#    3: Colorsets
#    4: Menus
#    5: Bindings
#    6: Decor
#    7: Modules
#
#################################

# InfoStoreAdd can be used to store variable data internal to fvwm.
# The variable can then be used in the configuration as $[infostore.name].
#
# You can also use environment variables but for data internal to fvwm
# use InfoStore variables instead.
#
# The following is used in various menus and also sets the terminal
# that FvwmConsole uses. Change this to your terminal of choice
InfoStoreAdd terminal xterm

###########
# 1: Functions
#
# Fvwm can use custom functions for various tasks.
# The syntax for defining a function named FunctionName is:
#
#   DestroyFunc FunctionName
#   AddToFunc FunctionName
#   + I [Action to do Immediately]
#   + C [Action to do on a Mouse Click]
#   + D [Action to do on a Mouse Double Click]
#   + H [Action to do on a Mouse Hold]
#   + M [Action to do on a Mouse Motion]
###########

# Start Function
#
# The start function is run right after fvwm is done reading
# the config file. This function run after each restart
# so using Test (Init) or Test (Restart) can further control
# actions that are run during the first time run (Init) or
# actions that are run after a restart.
DestroyFunc StartFunction
AddToFunc   StartFunction
+ I Test (Init) SetBG maui.jpg
+ I Test (Init) Module FvwmBanner
# + I Module FvwmButtons RightPanel
+ I Module FvwmButtons DesktopManager
+ I Module FvwmButtons Tray
+ I Module FvwmButtons ApplicationManager
+ I Module FvwmButtons Dock
+ I Module FvwmButtons StopwatchManager
+ I Module FvwmButtons NotesManager
+ I Module FvwmButtons AudioManager
+ I Module FvwmButtons Time
+ I Module FvwmEvent EventNewDesk

# Init Function
#
# Ran when fvwm first starts an never ran again, even on restart.
DestroyFunc InitFunction
AddToFunc InitFunction
+ I Exec exec mkdir -p $[fvwm_cache]
+ I PipeRead 'bash $[fvwm_scripts]/xdgmenu "$[fvwm_cache]"'
+ I Exec exec nm-applet
+ I Exec exec blueman-applet
+ I Exec exec mate-volume-control-status-icon
+ I Exec exec cbatticon
+ I Exec exec xscreensaver --no-splash
+ I SetVolume 0

# Mouse Bindings Functions
DestroyFunc RaiseMoveTitlebar
AddToFunc RaiseMoveTitlebar
+ I Raise
# Tile a window fully if double clicked
+ D FullMaximizeButtonFunc
# Untile window if tiled
+ M Maximize False
# Move mouse pointer to the window location, if it was tiled
+ M Current (State 1) WarpToWindow 50 0
+ M Current (State 2) WarpToWindow 50 0
+ M Current (State 3) WarpToWindow 50 0
+ M Current (State 4) WarpToWindow 50 0
+ M Current (State 5) WarpToWindow 50 0
+ M Current (State 6) WarpToWindow 50 0
+ M Current (State 7) WarpToWindow 50 0
+ M Current (State 8) WarpToWindow 50 0
+ M Current (State 9) WarpToWindow 50 0
+ M Move
+ M Function ClearTileStatesFunc

DestroyFunc RaiseMoveIconify
AddToFunc RaiseMoveIconify
+ I Raise
+ M Move
+ D Iconify off

DestroyFunc RaiseMove
AddToFunc RaiseMove
+ I Raise
+ M $0

DestroyFunc MoveToCurrent
AddToFunc MoveToCurrent
+ I ThisWindow MoveToPage
+ I ThisWindow MoveToDesk

# Function: ViewManPage $0
#
# This function loads the man page $0 in an terminal
# and is used with the help menu.
DestroyFunc ViewManPage
AddToFunc   ViewManPage
+ I Exec exec $[infostore.terminal] -g 80x40 \
  -n "Manual Page - $0" -T "Manual Page - $0" -e man "$0"

# Function: SetBG $0
#
# SetBG is used with the background menu to set the background
# image and configure it to be loaded the next time fvwm is run.
DestroyFunc SetBG
AddToFunc   SetBG
+ I Test (x feh) \
    Test (f $[fvwm_wallpaper]/$0) \
    Exec exec feh --bg-fill $[fvwm_wallpaper]/$0

# Function: IconManClick
#
# This function is run from FvwmIconMan when the button is clicked.
DestroyFunc IconManClick
AddToFunc   IconManClick
+ I ThisWindow (Focused, !Shaded, !Iconic, CurrentPage) Iconify
+ I TestRc (Match) Break
+ I ThisWindow WindowShade off
+ I ThisWindow Iconify off
+ I ThisWindow Raise
+ I ThisWindow (AcceptsFocus) FlipFocus

# Function: ToggleTitle
#
# This function will toggle if fvwm shows the TitleBar.
DestroyFunc ToggleTitle
AddToFunc   ToggleTitle
+ I ThisWindow (State 1) WindowStyle Title
+ I TestRc (Match) State 1 False
+ I TestRc (Match) Break
+ I WindowStyle !Title
+ I State 1 True

# Function: ChangeDesk
#
# This function is called by FvwmEvent every time the Desk is changed.
DestroyFunc ChangeDesk
AddToFunc   ChangeDesk
+ I SendToModule FvwmButtons ChangeButton desk0 Colorset 10
+ I SendToModule FvwmButtons ChangeButton desk1 Colorset 10
+ I SendToModule FvwmButtons ChangeButton desk2 Colorset 10
+ I SendToModule FvwmButtons ChangeButton desk3 Colorset 10
+ I SendToModule FvwmButtons ChangeButton desk$0 Colorset 11

DestroyFunc GotoDeskPreserve
AddToFunc GotoDeskPreserve
+ I SetEnv fvwm_desk$[desk.n]_pagex $[page.nx]
+ I SetEnv fvwm_desk$[desk.n]_pagey $[page.ny]
+ I GotoDesk 0 $0
+ I GotoPage [fvwm_desk$0_pagex] $[fvwm_desk$0_pagey]

# Function: SetVolume $0
#
# This function sets the volume.
DestroyFunc SetVolume
AddToFunc SetVolume
+ I Exec exec amixer -q set Master unmute $0%

# Function: IncVolume
#
# This function increases the volume.
DestroyFunc IncVolume
AddToFunc IncVolume
# + I Exec exec amixer -q set Master unmute 2%+
+ I Exec $[fvwm_scripts]/vol up

# Function: DecVolume
#
# This function decreases the volume.
DestroyFunc DecVolume
AddToFunc DecVolume
# + I Exec exec amixer -q set Master unmute 2%-
+ I Exec $[fvwm_scripts]/vol down

# Function: ToggleMute
#
# This function toggles volume mute.
DestroyFunc ToggleMute
AddToFunc ToggleMute
# + I Exec exec amixer -q set Master toggle
+ I Exec $[fvwm_scripts]/vol mute

# Function: MoveAndGotoPage
#
# Sends the current window to the selected page follows it there.
DestroyFunc MoveAndGotoPage
AddToFunc   MoveAndGotoPage
+ I MoveToPage wrapx wrapy $0 $1
+ I GotoPage wrapx wrapy $0 $1

# Function: MoveAndGotoDesk
#
# Sends the current window to the selected desk follows it there.
DestroyFunc MoveAndGotoDesk
AddToFunc   MoveAndGotoDesk
+ I MoveToDesk $0 $1
+ I GotoDesk $0 $1

# Function: WindowListFunc
#
# This function is called when a window is selected from the WindowList.
DestroyFunc WindowListFunc
AddToFunc WindowListFunc
+ I Iconify off
+ I FlipFocus
+ I Raise

# Function: ToggleStaysOnTop
#
# Toggles the window between layer 4 (regular) and layer 6.
DestroyFunc ToggleStaysOnTop
AddToFunc ToggleStaysOnTop
+ I ThisWindow ( Layer 6 ) WindowStyle StaysPut
+ I TestRc (NoMatch) WindowStyle StaysOnTop

# Function: TileFunc $0 $1 $2 $3 $4
#
# "Tiles" a window to a size and location on the screen, and sets the state of the window.
DestroyFunc TileFunc
AddToFunc TileFunc
+ I Function ClearTileStatesFunc
+ I State $0 True
+ I ResizeMoveMaximize Frame $1 $2 $3 $4
+ I WarpToWindow 99 90

# Function: ClearTileStatesFunc
#
# Clears the state bits of the window.
DestroyFunc ClearTileStatesFunc
AddToFunc ClearTileStatesFunc
+ I State 1 False
+ I State 2 False
+ I State 3 False
+ I State 4 False
+ I State 5 False
+ I State 6 False
+ I State 7 False
+ I State 8 False
+ I State 9 False

# Function: UnTileFunc
#
# Restores the original size and location of the window before tiling.
DestroyFunc UnTileFunc
AddToFunc UnTileFunc
+ I Maximize False
+ I Function ClearTileStatesFunc
+ I WarpToWindow 99 90

# Function: TileLeftFunc
#
# Tiles the window to the left of the current position.
DestroyFunc TileLeftFunc
AddToFunc TileLeftFunc
# if not tiled, tile left
+ I Current (!State 1, !State 2, !State 3, !State 4, !State 5, !State 6, !State 7, !State 8, !State 9, !State 10) Function TileFunc 4 50wa 100wa 0 0
+ I TestRc (Match) Break
# if tiled bottom-left, do nothing
+ I Current (State 1) Break
# if tiled bottom, then tile bottom-left
+ I Current (State 2) Function TileFunc 1 50wa 50wa 0 50
+ I State 2 False
+ I TestRc (Match) Break
# if tiled bottom-right, then tile bottom
+ I Current (State 3) Function TileFunc 2 100wa 50wa 0 50
+ I State 3 False
+ I TestRc (Match) Break
# if tiled left, do nothing
+ I Current (State 4) Function TileFunc 4 25wa 100wa 0 0
# if tiled middle, tile left
+ I Current (State 5) Function TileFunc 4 50wa 100wa 0 0
+ I State 5 False
+ I TestRc (Match) Break
# if tiled right, then untile and remove tiled states
+ I Current (State 6) Function UnTileFunc
+ I TestRc (Match) Break
# if tiled top-left, do nothing
+ I Current (State 7) Break
# if tiled up, then tile top-left
+ I Current (State 8) Function TileFunc 7 50wa 50wa 0 0
+ I State 8 False
+ I TestRc (Match) Break
# if tiled top-right, then tile top
+ I Current (State 9) Function TileFunc 8 100wa 50wa 0 0
+ I State 9 False
+ I TestRc (Match) Break

# Function: TileRightFunc
#
# Tiles the window to the right of the current position.
DestroyFunc TileRightFunc
AddToFunc TileRightFunc
# if not tiled, tile right
+ I Current (!State 1, !State 2, !State 3, !State 4, !State 5, !State 6, !State 7, !State 8, !State 9, !State 10) Function TileFunc 6 50wa 100wa 50 0
+ I TestRc (Match) Break
# if tiled bottom-left, tile to bottom
+ I Current (State 1) Function TileFunc 2 100wa 50wa 0 50
+ I State 1 False
+ I TestRc (Match) Break
# if tiled bottom, then tile bottom-right
+ I Current (State 2) Function TileFunc 3 50wa 50wa 50 50
+ I State 2 False
+ I TestRc (Match) Break
# if tiled bottom-right, then do nothing
+ I Current (State 3) Break
# if tiled left, then untile
+ I Current (State 4) Function UnTileFunc
+ I TestRc (Match) Break
# if tiled middle, tile right
+ I Current (State 5) Function TileFunc 6 50wa 100wa 50 0
+ I State 5 False
+ I TestRc (Match) Break
# if tiled right, then do nothing
+ I Current (State 6) Function TileFunc 6 25wa 100wa 75 0
# if tiled top-left, then tile top
+ I Current (State 7) Function TileFunc 8 100wa 50wa 0 0
+ I TestRc (Match) Break
# if tiled up, then tile top-right
+ I Current (State 8) Function TileFunc 9 50wa 50wa 50 0
+ I State 8 False
+ I TestRc (Match) Break
# if tiled top-right, then do nothing
+ I Current (State 9) Break

# Function: TileUpFunc
#
# Tiles the window above the current position.
DestroyFunc TileUpFunc
AddToFunc TileUpFunc
# if not tiled, tile up
+ I Current (!State 1, !State 2, !State 3, !State 4, !State 5, !State 6, !State 7, !State 8, !State 9, !State 10) Function TileFunc 5 100wa 100wa 0 0
+ I TestRc (Match) Break
# if tiled bottom-left, tile to left
+ I Current (State 1) Function TileFunc 4 50wa 100wa 0 0
+ I State 1 False
+ I TestRc (Match) Break
# if tiled bottom, then untile
+ I Current (State 2) Function UnTileFunc
+ I TestRc (Match) Break
# if tiled bottom-right, then tile right
+ I Current (State 3) Function TileFunc 6 50wa 100wa 50 0
+ I State 3 False
+ I TestRc (Match) Break
# if tiled left, then tile top left
+ I Current (State 4) Function TileFunc 7 50wa 50wa 0 0
+ I State 4 False
+ I TestRc (Match) Break
# if tiled middle, tile up
+ I Current (State 5) Function TileFunc 8 100wa 50wa 0 0
+ I State 5 False
+ I TestRc (Match) Break
# if tiled right, then tile top right
+ I Current (State 6) Function TileFunc 9 50wa 50wa 50 0
+ I State 6 False
+ I TestRc (Match) Break
# if tiled top-left, then do nothing
+ I Current (State 7) Break
# if tiled up, then do nothing
+ I Current (State 8) Break
# if tiled top-right, then do nothing
+ I Current (State 9) Break
# if tiled fullscreen, then tile top
+ I Current (State 5) Function TileFunc 8 100wa 50wa 0 0
+ I State 5 False
+ I TestRc (Match) Break

# Function: TileDownFunc
#
# Tiles the window below the current position.
DestroyFunc TileDownFunc
AddToFunc TileDownFunc
# if not tiled, tile down
+ I Current (!State 1, !State 2, !State 3, !State 4, !State 5, !State 6, !State 7, !State 8, !State 9, !State 10) Function TileFunc 2 100wa 50wa 0 50
+ I TestRc (Match) Break
# if tiled bottom-left, do nothing
+ I Current (State 1) Break
# if tiled bottom, do nothing
+ I Current (State 2) Break
# if tiled bottom-right, then do nothing
+ I Current (State 3) Break
# if tiled left, then tile bottom left
+ I Current (State 4) Function TileFunc 1 50wa 50wa 0 50
+ I State 4 False
+ I TestRc (Match) Break
# if tiled middle, tile down
+ I Current (State 5) Function UnTileFunc
+ I State 5 False
+ I TestRc (Match) Break
# if tiled right, then tile bottom right
+ I Current (State 6) Function TileFunc 3 50wa 50wa 50 50
+ I State 6 False
+ I TestRc (Match) Break
# if tiled top-left, then tile left
+ I Current (State 7) Function TileFunc 4 50wa 100wa 0 0
+ I State 7 False
+ I TestRc (Match) Break
# if tiled up, then tile to fullscreen
+ I Current (State 8) Function TileFunc 5 100wa 100wa 0 0
+ I State 8 False
+ I TestRc (Match) Break
# if tiled top-right, then tile right
+ I Current (State 9) Function TileFunc 6 50wa 100wa 50 0
+ I State 9 False
+ I TestRc (Match) Break

# Function: UnTileAndCenter
#
# Clears the state bits, unmaximizes, and centers the window.
DestroyFunc UnTileAndCenter
AddToFunc UnTileAndCenter
+ I Current Function UnTileFunc
+ I Current Move 50-50w 50-50w
+ I Current WarpToWindow 99 90

# Function: FullMaximizeButtonFunc
#
# If untiled, fully maximize a window. If tiled, then untile.
DestroyFunc FullMaximizeButtonFunc
AddToFunc FullMaximizeButtonFunc
# if not tiled, tile full
+ I Current (!State 1, !State 2, !State 3, !State 4, !State 5, !State 6, !State 7, !State 8, !State 9, !State 10) Function TileFunc 5 100wa 100wa 0 0
+ I TestRc (Match) Break
# else, untile
+ I Current Function UnTileFunc

# Function: HorizontalMaximizeButtonFunc
#
# If untiled, horizontally maximize a window. If tiled, then untile.
DestroyFunc HorizontalMaximizeButtonFunc
AddToFunc HorizontalMaximizeButtonFunc
# if not tiled, tile full
+ I Current (!State 1, !State 2, !State 3, !State 4, !State 5, !State 6, !State 7, !State 8, !State 9, !State 10) Function TileFunc 5 100wa keep 0 keep
+ I TestRc (Match) Break
# else, untile
+ I Current Function UnTileFunc

# Function: VerticalMaximizeButtonFunc
#
# If untiled, vertically maximize a window. If tiled, then untile.
DestroyFunc VerticalMaximizeButtonFunc
AddToFunc VerticalMaximizeButtonFunc
# if not tiled, tile full
+ I Current (!State 1, !State 2, !State 3, !State 4, !State 5, !State 6, !State 7, !State 8, !State 9, !State 10) Function TileFunc 5 keep 100wa keep 0
+ I TestRc (Match) Break
# else, untile
+ I Current Function UnTileFunc


#############
# 2: Styles #
#############

# Desktops and Pages
#
# Fvwm has both Virtual Desktops and Pages. Each Desktop is built from
# a grid of Pages. The following sets the name of four Desktops and then
# divides each Desktop into a 2x2 grid of Pages that are positioned as
#
#   +---+---+---+
#   |   |   |   |
#   +---+---+---+
#   |   |   |   |
#   +---+---+---+
#   |   |   |   |
#   +---+---+---+
#
DesktopName 0 Main
DesktopName 1 Desk1
DesktopName 2 Desk2
DesktopName 3 Desk3
DesktopSize 3x3

# With per-monitor , each RandR monitor has a separate copy of desktops,
# and hence function independently of one another when switching desks/pages.
DesktopConfiguration per-monitor

# EdgeScroll will move the view port between the Pages when the mouse
# moves to the edge of the screen. This set the amount of distance to
# scroll at 100% (full page) and the EdgeResistance which is a timer
# for how long the mouse as at the edge before it scrolls.
#
# Set EdgeScroll 0 0 and/or EdgeResistance -1 to disable.
EdgeScroll 100 100 wrap
EdgeResistance 300
EdgeThickness 1
Style * EdgeMoveDelay 0, EdgeMoveResistance 20

# EwmhBaseStruts [left] [right] [top] [bottom]
# Reserves space along the edge(s) of the Screen that will not
# be covered when maximizing or placing windows.
EwmhBaseStruts 3 180 3 3

# This sets the ClickTime and MoveThreshold used to determine
# Double Clicks, Hold and Move for the mouse.
ClickTime 250
MoveThreshold 3

# Sets the focus style to SloppyFocus and a mouse click
# in a window will Raise it.
Style * SloppyFocus, MouseFocusClickRaises
# Style * ClickToFocus, ClickToFocusPassesClick, ClickToFocusRaises
# # Function: AutoRaise
# #
# # Focuses a window and adds it to the front of the window list.
# # FIXME FlipFocus might be buggy
# DestroyFunc AutoFocus
# AddToFunc AutoFocus
# + I Iconify off
# + I Focus
# Module FvwmAuto 300 -menter "Silent AutoFocus"

# Default Font
DefaultFont "xft:Sans:Bold:size=10:antialias=True"

# Window Placement
# Style * MinOverlapPlacement, GrabFocusOff, !UsePPosition
# Style * PositionPlacement Center, FPGrabFocus, !UsePPosition
Style * CascadePlacement, FPGrabFocus, !UsePPosition

# Sets all windows to OpaqueMove (vs a wired frame) and  windows will
# snap to each other and the edge of the screen.
OpaqueMoveSize unlimited
Style * ResizeOpaque, SnapAttraction 10 SameType ScreenAll, SnapGrid

# Transient Windows (such as open file windows)
Style * DecorateTransient, StackTransientParent
# Style * !FPGrabFocusTransient, FPReleaseFocusTransient
Style * FPGrabFocusTransient, FPReleaseFocusTransient

# WindowShade
Style * WindowShadeScrolls, WindowShadeSteps 10

# Ignore Numlock and other modifiers for bindings
# See http://fvwm.org/documentation/faq/#why-do-numlock-capslock-and-scrolllock-interfere-with-clicktofocus-andor-my-mouse-bindings
IgnoreModifiers L25

# Decor Styles
Style * BorderWidth 7, HandleWidth 7, MWMButtons, FvwmBorder, FirmBorder
Style * Colorset 1, HilightColorset 2
Style * BorderColorset 3, HilightBorderColorset 4

# Disable Icons from appearing on desktop.
# Comment this out or use Style * Icon to get the icons back.
Style * !Icon

# Window Specific Styles
# Style RightPanel !Title, !Borders, !Handles, Sticky, \
#                  WindowListSkip, NeverFocus
Style DesktopManager !Title, !Handles, Sticky, WindowListSkip, NeverFocus
Style Tray !Title, !Handles, Sticky, WindowListSkip, NeverFocus
Style ApplicationManager !Title, !Handles, Sticky, WindowListSkip, NeverFocus
Style Dock !Title, !Handles, Sticky, WindowListSkip, NeverFocus
Style AudioManager !Title, !Handles, Sticky, WindowListSkip, NeverFocus
Style StopwatchManager !Title, !Handles, Sticky, WindowListSkip, NeverFocus
Style NotesManager !Title, !Handles, Sticky, WindowListSkip
Style Time !Title, !Handles, Sticky, WindowListSkip, NeverFocus
Style ConfirmQuit !Title, PositionPlacement Center, WindowListSkip, Layer 6
Style FvwmIdent WindowListSkip

#######
# 3: Colorsets
#
# Colorsets can be used to configure the color of the various
# parts of fvwm such as window decor, menus, modules, etc.
#
# Colorset Convention
#
#   0 - Default
#   1 - Inactive Windows
#   2 - Active Window
#   3 - Inactive Windows Borders
#   4 - Active Windows Borders
#   5 - Menu - Inactive Item
#   6 - Menu - Active Item
#   7 - Menu - Grayed Item
#   8 - Menu - Title
#   9 - Reserved
#  10+ Modules
#      10 - Module Default
#      11 - Module Hilight
#      12 - Module ActiveButton (Mouse Hover)
#      13 - FvwmPager Active Page
#      14 - FvwmIconMan Iconified Button
###########
Colorset 0  fg #ffffff, bg #003c3c, hi, sh, Plain, NoShape
Colorset 1  fg #000000, bg #8f9f8f, hi, sh, Plain, NoShape
Colorset 2  fg #ffffff, bg #003c3c, hi, sh, Plain, NoShape
Colorset 3  fg black, bg #4d4d4d, hi #676767, sh #303030, Plain, NoShape
Colorset 4  fg black, bg #2d2d2d, hi #474747, sh #101010, Plain, NoShape
Colorset 5  fg #000000, bg #ffffff, hi, sh, Plain, NoShape
Colorset 6  fg #ffffff, bg #2d2d2d, hi, sh, Plain, NoShape
Colorset 7  fg grey30, bg #ffffff, hi, sh, Plain, NoShape
Colorset 8  fg #ffffff, bg #003c3c, hi, sh, Plain, NoShape
Colorset 10 fg #ffffff, bg #003c3c, hi #aaaaaa, sh #999999, Plain, NoShape
Colorset 11 fg #ffffff, bg #1a6e99, hi #ffffff, sh #ffffff, Plain, NoShape
Colorset 12 fg #2d2d2d, bg #ffffff, hi, sh, Plain, NoShape
Colorset 13 fg #ffffff, bg #006c6c, hi, sh, Plain, NoShape
Colorset 14 fg #555555, bg #003c3c, hi #aaaaaa, sh #999999, Plain, NoShape

# InActive title right & text/bevel colors
Colorset 1 VGradient 32 4 grey96 30 grey90 50 grey88 85 grey76 10 black, \
    fg grey50, bg grey50, sh grey50, hi grey100
# Active title right & text/bevel color
Colorset 2 VGradient 32 4 grey96 30 grey85 50 grey80 80 grey60 10 black, \
    fg grey85, bg grey50, sh grey20, hi grey100
# Active title left. Note how you can use different ways to define colors.
# The most comfortable way would be using the colors listed in rgb.txt,
# but rgb:rr/gg/bb works just aswell.
Colorset 3 VGradient 32 3 #009a00 20 green4 50 darkslategrey 10 black, \
    bg grey
# InActive title left
Colorset 4 VGradient 32 3 grey80 80 grey70 70 grey62 10 black, \
    bg grey

#######
# 4: Menus
###########
MenuStyle * MenuColorset 5, ActiveColorset 6, GreyedColorset 7, TitleColorset 8
MenuStyle * Hilight3DOff, HilightBack, HilightTitleBack, SeparatorsLong
MenuStyle * TrianglesSolid, TrianglesUseFore
MenuStyle * ItemFormat "%|%3.1i%5.3l%5.3>%|"
MenuStyle * Font "xft:Sans:Bold:size=10:antialias=True"

# Root Menu
#
# The root menu will PopUp with a click in the root
# window or using alt-f1 (or menu).
DestroyMenu MenuFvwmRoot
AddToMenu   MenuFvwmRoot "Fvwm" Title
+ "&Programs%icons/programs.png%" Popup MenuPrograms
+ "XDG &Menu%icons/apps.png%" Popup XDGMenu
+ "&XTerm%icons/terminal.png%" Exec exec $[infostore.terminal]
+ "" Nop
+ "Fvwm&Console%icons/terminal.png%" Module FvwmConsole -terminal $[infostore.terminal]
+ "&Wallpapers%icons/wallpaper.png%" Popup BGMenu
+ "M&an Pages%icons/help.png%" Popup MenuFvwmManPages
+ "Copy Config%icons/conf.png%" FvwmScript FvwmScript-ConfirmCopyConfig
+ "" Nop
+ "&Restart FVWM%icons/refresh.png%" Restart
+ "Re&boot%icons/restart.png%" Exec exec reboot
+ "&Quit%icons/quit.png%" Module FvwmScript FvwmScript-ConfirmQuit

# Dock Menu
#
# The dock menu will PopUp with a click in the dock.
DestroyMenu MenuDock
AddToMenu   MenuDock "Fvwm" Title
+ "&Programs%icons/programs.png%" Popup MenuPrograms
+ "XDG &Menu%icons/apps.png%" Popup XDGMenu
+ "&XTerm%icons/terminal.png%" Exec exec $[infostore.terminal]
+ "" Nop
+ "Fvwm&Console%icons/terminal.png%" Module FvwmConsole -terminal $[infostore.terminal]
+ "&Wallpapers%icons/wallpaper.png%" Popup BGMenu
+ "M&an Pages%icons/help.png%" Popup MenuFvwmManPages
+ "Copy Config%icons/conf.png%" FvwmScript FvwmScript-ConfirmCopyConfig
+ "" Nop
+ "&Restart FVWM%icons/refresh.png%" Restart
+ "Re&boot%icons/restart.png%" Exec exec reboot
+ "&Quit%icons/quit.png%" Module FvwmScript FvwmScript-ConfirmQuit

# Generate XDGMenu
PipeRead 'bash $[fvwm_scripts]/xdgmenu "$[fvwm_cache]"'

# Programs Menu
#
# This test for some common programs and adds them to the menu.
# When adding programs you don't need to use the Test (x foo)
# lines as this is only to help make this menu portable.
DestroyMenu MenuPrograms
AddToMenu   MenuPrograms "Programs" Title
Test (x chromium) + "Chromium" Exec exec chromium
Test (x firefox) + "Firefox" Exec exec firefox
Test (x google-chrome) + "Google-Chrome" Exec exec google-chrome
Test (x gvim) + "gVim" Exec exec gvim
Test (x emacs) + "Emacs" Exec exec emacs
Test (x gimp) + "Gimp" Exec exec gimp
Test (x vlc) + "VLC" Exec exec vlc

# Background Menu
#
# Backgrounds are located in ~/.fvwm/images/background/
# Menu icons are located in ~/.fvwm/images/bgicons/
DestroyMenu BGMenu
AddToMenu   BGMenu "Wallpapers" Title
+ "Floral%bgicons/bg1.png%" SetBG bg1.png
+ "Circles%bgicons/bg2.png%" SetBG bg2.png
+ "Space%bgicons/bg3.png%" SetBG bg3.png

# Window Operations Menus
DestroyMenu MenuWindowOpsLong
AddToMenu   MenuWindowOpsLong
+ "Move"                Move
+ "Resize"              Resize
+ "Iconify"             Iconify
+ "Maximize"            FullMaximizeButtonFunc
+ "Shade"               WindowShade
+ "Sticky"              Stick
+ "TitleBar"            Pick (CirculateHit) ToggleTitle
+ "Send To"             Popup MenuSendTo
+ "" Nop
+ "Close"               Close
+ "Destroy"             Destroy
+ "" Nop
+ "Raise"		Raise
+ "Lower"		Lower
+ "" Nop
+ "StaysOnTop"          Pick (CirculateHit) Layer 0 6
+ "StaysPut"            Pick (CirculateHit) Layer 0 4
+ "StaysOnBottom"       Pick (CirculateHit) Layer 0 2
+ "" Nop
+ "Identify"            Module FvwmIdent

DestroyMenu MenuIconOps
AddToMenu   MenuIconOps
+ "(De)Iconify"         Iconify
+ "(Un)Maximize"        FullMaximizeButtonFunc
+ "(Un)Shade"           WindowShade
+ "(Un)Sticky"		Stick
+ "(No)TitleBar"	Pick (CirculateHit) ToggleTitle
+ "Send To"             Popup MenuSendTo
+ "" Nop
+ "Close"               Close
+ "Destroy"             Destroy
+ "" Nop
+ "Raise"		Raise
+ "Lower"		Lower
+ "" Nop
+ "StaysOnTop"          Pick (CirculateHit) Layer 0 6
+ "StaysPut"            Pick (CirculateHit) Layer 0 4
+ "StaysOnBottom"       Pick (CirculateHit) Layer 0 2
+ "" Nop
+ "Identify"            Module FvwmIdent

DestroyMenu MenuSendTo
AddToMenu MenuSendTo
+ "Current" MoveToCurrent
+ "Page" PopUp MenuSendToPage
+ "Desk" PopUp MenuSendToDesk

DestroyMenu MenuSendToDesk
AddToMenu   MenuSendToDesk
+ "One"	  MoveToDesk 0 0
+ "Two"   MoveToDesk 0 1
+ "Three" MoveToDesk 0 2
+ "Four"  MoveToDesk 0 3

DestroyMenu MenuSendToPage
AddToMenu   MenuSendToPage
+ "Page (0,0)"	MoveToPage 0 0
+ "Page (0,1)"	MoveToPage 0 1
+ "Page (0,2)"	MoveToPage 0 2
+ "Page (1,0)"	MoveToPage 1 0
+ "Page (1,1)"	MoveToPage 1 1
+ "Page (1,2)"	MoveToPage 1 2
+ "Page (2,0)"	MoveToPage 2 0
+ "Page (2,1)"	MoveToPage 2 1
+ "Page (2,2)"	MoveToPage 2 2


# Fvwm Man Pages (Help) Menu
DestroyMenu MenuFvwmManPages
AddToMenu   MenuFvwmManPages "Help" Title
+ "fvwm"                ViewManPage fvwm
+ "FvwmAnimate"         ViewManPage FvwmAnimate
+ "FvwmAuto"            ViewManPage FvwmAuto
+ "FvwmBacker"          ViewManPage FvwmBacker
+ "FvwmBanner"          ViewManPage FvwmBanner
+ "FvwmButtons"         ViewManPage FvwmButtons
+ "FvwmCommand"         ViewManPage FvwmCommand
+ "FvwmConsole"         ViewManPage FvwmConsole
+ "FvwmEvent"           ViewManPage FvwmEvent
+ "FvwmForm"            ViewManPage FvwmForm
+ "FvwmIconMan"         ViewManPage FvwmIconMan
+ "FvwmIdent"           ViewManPage FvwmIdent
+ "FvwmPager"           ViewManPage FvwmPager
+ "FvwmPerl"            ViewManPage FvwmPerl
+ "FvwmProxy"           ViewManPage FvwmProxy
+ "FvwmRearrange"       ViewManPage FvwmRearrange
+ "FvwmScript"          ViewManPage FvwmScript
+ "" Nop
+ "fvwm-root"	        ViewManPage fvwm-root
+ "fvwm-menu-desktop"   ViewManPage fvwm-menu-desktop
+ "fvwm-menu-directory" ViewManPage fvwm-menu-directory
+ "fvwm-menu-headlines" ViewManPage fvwm-menu-headlines
+ "fvwm-menu-xlock"     ViewManPage fvwm-menu-xlock
+ "fvwm-config"         ViewManPage fvwm-config

#######
# 5: Mouse and Key bindings
#
# Contexts:
#     R = Root Window                 rrrrrrrrrrrrrrrrrrrrrr
#     W = Application Window          rIrrrr<---------^rrrrr
#     F = Frame Corners               rrrrrr[13TTTT642]rrrrr
#     S = Frame Sides                 rIrrrr[wwwwwwwww]rrrrr
#     T = Title Bar                   rrrrrr[wwwwwwwww]rrrrr
#     I = Icon                        rIrrrrv_________>rrrrr
#                                     rrrrrrrrrrrrrrrrrrrrrr
#
#     Numbers are buttons: [1 3 5 7 9  TTTTT  0 8 6 4 2]
#
# Modifiers: (A)ny, (C)ontrol, (S)hift, (M)eta, (N)othing
#
# Format: Key <X>  <Context> <Modifier> <Action>
#         Mouse <X> <Context> <Modifier> <Action>
####################

# Alt-F1 or Menu to load the root menu and Alt-Tab for a WindowList.
# Ctrl-F1/F2/F3/F4 will switch between the Virtual Desktops.
# Super_R (windows key) will launch a terminal.
#
# Silent supresses any errors (such as keyboards with no Menu key).
Silent Key F1 A M Menu MenuFvwmRoot
Silent Key Menu A A Menu MenuFvwmRoot
# Silent Key Tab A M WindowList Root c-90p c NoDeskSort, SelectOnRelease Meta_L
Silent Key Tab A M WindowList Root c c CurrentDesk, NoGeometry, CurrentAtEnd, IconifiedAtEnd
Silent Key 1 A 4 GotoDeskPreserve 0
Silent Key 2 A 4 GotoDeskPreserve 1
Silent Key 3 A 4 GotoDeskPreserve 2
Silent Key 4 A 4 GotoDeskPreserve 3
Silent Key 1 A S4 MoveAndGotoDesk 0 0
Silent Key 2 A S4 MoveAndGotoDesk 0 1
Silent Key 3 A S4 MoveAndGotoDesk 0 2
Silent Key 4 A S4 MoveAndGotoDesk 0 3
# Silent Key Super_L A A Exec exec $[infostore.terminal]

# Tiling
Silent Key Left A 4 TileLeftFunc
Silent Key Right A 4 TileRightFunc
Silent Key Up A 4 TileUpFunc
Silent Key Down A 4 TileDownFunc

Silent Key Left A 4S Maximize True growleft 0
Silent Key Right A 4S Maximize True growright 0
Silent Key Up A 4S Maximize True 0 growup
Silent Key Down A 4S Maximize True 0 growdown

Silent Key Space A 4 UnTileAndCenter

Silent Key Up A 4C GotoPage wrapx wrapy 0p -1p
Silent Key Down A 4C GotoPage wrapx wrapy 0p +1p
Silent Key Left A 4C GotoPage wrapx wrapy -1p 0p
Silent Key Right A 4C GotoPage wrapx wrapy +1p 0p
Silent Key Up A 4CS MoveAndGotoPage 0p -1p
Silent Key Down A 4CS MoveAndGotoPage 0p +1p
Silent Key Left A 4CS MoveAndGotoPage -1p 0p
Silent Key Right A 4CS MoveAndGotoPage +1p 0p

Silent Key Tab A 4 GotoPage prev

# Launcher
Silent Key R A 4 Exec exec dmenu

# Audio Controls
Silent Key XF86AudioLowerVolume A A DecVolume
Silent Key XF86AudioRaiseVolume A A IncVolume
Silent Key XF86AudioMute A A ToggleMute
Silent Key XF86AudioNext A A Exec exec playerctl --player=strawberry,%any -s next
Silent Key XF86AudioPrev A A Exec exec playerctl --player=strawberry,%any -s previous
Silent Key XF86AudioPlay A A Exec exec playerctl --player=strawberry,%any -s play-pause
Silent Key XF86AudioStop A A Exec exec playerctl --player=strawberry,%any -s stop

# Screenshot
Silent Key Print A S Exec exec flameshot full -p ~/Pictures/Screenshots
Silent Key Print A 4 Exec exec flameshot launcher
Silent Key Print A N Exec exec flameshot gui

# Brightness Buttons
Silent Key XF86MonBrightnessUp A A Exec exec xbacklight -inc 2
Silent Key XF86MonBrightnessDown A A Exec exec xbacklight -dec 2

# Window Buttons: [1 3 5 7 9  TTTTT  0 8 6 4 2]
#   1 - Open the WindowOps menu.
#   2 - Close on single click, Destroy on double click.
#   4 - Maximize (right/middle button will only maximize vertical/horizontal)
#   6 - Iconify (minimize)
Mouse 1 1 A ToggleStaysOnTop
Mouse 1 2 A Close
Mouse 1 4 A FullMaximizeButtonFunc
Mouse 2 4 A VerticalMaximizeButtonFunc
Mouse 3 4 A HorizontalMaximizeButtonFunc
Mouse 1 6 A Iconify

#   TitleBar: Click to Raise, Move, Double Click to Maximize
#             Mouse Wheel Up/Down to WindowShade On/Off
#   Borders: Click to raise, Move to Resize
#   Root Window: Left Click - Main Menu
#                Right Click - WindowOps Menu
#                Middle Click - Window List Menu
#   Right click TitleBar/Borders for WindowOps Menu
Mouse 1	T    A RaiseMoveTitlebar
Mouse 1	FS   A RaiseMove Resize
Mouse 4	T    A WindowShade True
Mouse 5	T    A WindowShade False
# Mouse 1	R    A Menu MenuFvwmRoot
Mouse 1	R    A Menu MenuPrograms
Mouse 2	R    A WindowList
Mouse 3	R    A Menu MenuWindowOpsLong
Mouse 1	I    A RaiseMoveIconify
Mouse 3	T    A Menu MenuWindowOpsLong
Mouse 3 I    A Menu MenuIconOps

#######
# 6: Window Decor
#
# Buttons Locations: [1 3 5 7 9  TTTTT  0 8 6 4 2]
#
#   1 - WindowOps Menu
#   2 - Close
#   4 - Maximize
#   6 - Minimize
###########
TitleStyle Centered Height 36 -- Flat

### Traditional FVWM styled-buttons
# ButtonStyle All ActiveUp Vector 5 15x15@4 15x85@3 85x85@3 85x15@3 \
#                 15x15@3 -- Flat
# ButtonStyle All ToggledActiveUp Vector 5 15x15@4 15x85@3 85x85@3 \
#                 85x15@3 15x15@3 -- Flat
# ButtonStyle All ActiveDown Vector 5 20x20@4 20x80@3 80x80@3 80x20@3 \
#                 20x20@3 -- Flat
# ButtonStyle All ToggledActiveDown Vector 5 20x20@4 20x80@3 80x80@3 \
#                 80x20@3 20x20@3 -- Flat
# ButtonStyle All ToggledInactive Vector 5 47x47@3 57x53@3 53x53@3 \
#                 53x47@3 47x47@3 -- Flat
# ButtonStyle All Inactive Vector 5 47x47@3 57x53@3 53x53@3 53x47@3 \
#                 47x47@3 -- Flat
# AddButtonStyle 1 Active Vector 5 45x45@3 55x45@3 55x55@3 45x55@3 45x45@3
# AddButtonStyle 2 Active Vector 4 35x35@3 65x65@3 65x35@4 35x65@3
# AddButtonStyle 4 Active Vector 8 30x70@3 30x30@3 70x30@3 70x70@3 30x70@3 \
#                  30x50@4 50x50@3 50x70@3
# AddButtonStyle 4 ToggledActiveUp Vector 8 30x70@3 30x30@3 70x30@3 70x70@3 \
#                  30x70@3 50x30@4 50x50@3 70x50@3
# AddButtonStyle 6 Active Vector 5 35x60@3 65x60@3 65x50@3 35x50@3 35x60@3
# ButtonStyle All - Clear
# ButtonStyle 1 - MwmDecorMenu
# ButtonStyle 4 - MwmDecorMax
# ButtonStyle 6 - MwmDecorMin

### Sawfish
ButtonStyle All Vector 3 75x25@1 25x25@1 25x75@1
AddButtonStyle All Vector 5 20x20@0 20x80@0 80x80@0 80x20@0 20x20@0
AddButtonStyle All Vector 3 30x85@2 85x85@2 85x20@2

AddButtonStyle 2 Vector 2 40x40@0 60x60@0
AddButtonStyle 2 Vector 2 40x60@0 60x40@0

AddButtonStyle 4 Vector 5 35x35@0 35x65@0 65x65@0 65x35@0 35x35@0
AddButtonStyle 4 Vector 2 35x45@0 65x45@0
AddButtonStyle 4 Vector 2 35x40@0 65x40@0

AddButtonStyle 6 Vector 2 35x65@0 65x65@0
AddButtonStyle 6 Vector 2 35x60@0 65x60@0

ButtonStyle All -- UseTitleStyle Flat

############
# 7: Modules
#############

# FvwmIdent
#
# FvwmIdent is a module that can be used to get the various info about
# a window. One use is getting the class/resource/name of a window.
DestroyModuleConfig FvwmIdent:*
*FvwmIdent: Colorset 10
*FvwmIdent: Font "xft:Sans:size=12:antialias=True"

# FvwmBanner
#
# This displays the Fvwm Logo for 5 seconds. This is displayed
# when fvwm starts.
DestroyModuleConfig FvwmBanner:*
*FvwmBanner: NoDecor
*FvwmBanner: Timeout 5

# FvwmScript
#
# FvwmScript is a module that allows one to write custom desktop
# widgets and various other tools. This config uses two FvwmScripts.
#   - DateTime - uses the output of "date" to display the date/time
#     on the RightPanel.
#   - Quit - This is a popup that asks for quit confirmation before
#     quitting fvwm.
DestroyModuleConfig FvwmScript:*
*FvwmScript: DefaultColorset 10

# FvwmButtons - RightPanel
#
# FvwmButtons is a powerful module that can be used to build custom
# panels and docks. This config uses FvwmButtons to build the RightPanel.
# The panel contains buttons to switch desks, FvwmPager, a system tray,
# FvwmIconMan (list of running windows), and a clock.
#
# Note - To use the system tray you must have "stalonetray" installed.
# DestroyModuleConfig RightPanel:*
# *RightPanel: Geometry 160x$[vp.height]-0+0
# *RightPanel: Colorset 10
# *RightPanel: Rows $[vp.height]
# *RightPanel: Columns 160
# *RightPanel: Frame 0
# *RightPanel: Font "xft:Sans:Bold:size=12:antialias=True"
# *RightPanel: (160x60, Icon "fvwm-logo-small.png", Frame 0)
# *RightPanel: (160x5, Frame 0)
# *RightPanel: (10x30, Frame 0)
# *RightPanel: (35x30, Id desk0, Title "1", Action (Mouse 1) GotoDesk 0 0, Colorset 11, ActiveColorset 12, Frame 0)
# *RightPanel: (35x30, Id desk1, Title "2", Action (Mouse 1) GotoDesk 0 1, ActiveColorset 12, Frame 0)
# *RightPanel: (35x30, Id desk2, Title "3", Action (Mouse 1) GotoDesk 0 2, ActiveColorset 12, Frame 0)
# *RightPanel: (35x30, Id desk3, Title "4", Action (Mouse 1) GotoDesk 0 3, ActiveColorset 12, Frame 0)
# *RightPanel: (10x30, Frame 0)
# *RightPanel: (5x100, Frame 0)
# *RightPanel: (150x100, Swallow FvwmPager 'Module FvwmPager *', Frame 0)
# *RightPanel: (5x100, Frame 0)
# *RightPanel: (160x5, Frame 0)
# Test (x stalonetray) *RightPanel: (160x20, Swallow(NoClose,UseOld) \
#     stalonetray 'Exec exec stalonetray --config \
#     "$[FVWM_DATADIR]/default-config/.stalonetrayrc"', Frame 0)
# *RightPanel: (160x5, Frame 0)
# Test (x stalonetray) PipeRead 'echo "*RightPanel: (160x$(($[vp.height]-300)), \
#     Top, Swallow FvwmIconMan \'Module FvwmIconMan\', Frame 0)"'
# Test (!x stalonetray) PipeRead 'echo "*RightPanel: (160x$(($[vp.height]-280)),\
#     Top, Swallow FvwmIconMan \'Module FvwmIconMan\', Frame 0)"'
# *RightPanel: (160x70, Swallow DateTime 'Module FvwmScript FvwmScript-DateTime',\
#     Frame 0)
# *RightPanel: (160x5, Frame 0)

DestroyModuleConfig DesktopManager:*
*DesktopManager: Geometry 160x180-3+3
*DesktopManager: Colorset 10
*DesktopManager: Rows 185
*DesktopManager: Columns 160
*DesktopManager: Frame 0
*DesktopManager: Padding 0 0
*DesktopManager: Font "xft:Sans:Bold:size=10:antialias=True"
*DesktopManager: (160x5, Frame 0)
*DesktopManager: (5x30, Frame 0)
*DesktopManager: (70x30, Id desk0, Title "One", Action (Mouse 1) GotoDesk 0 0, Colorset 11, ActiveColorset 12, Frame 2)
*DesktopManager: (10x30, Frame 0)
*DesktopManager: (70x30, Id desk1, Title "Two", Action (Mouse 1) GotoDesk 0 1, ActiveColorset 12, Frame 2)
*DesktopManager: (5x30, Frame 0)
*DesktopManager: (160x5, Frame 0)
*DesktopManager: (5x30, Frame 0)
*DesktopManager: (70x30, Id desk2, Title "Three", Action (Mouse 1) GotoDesk 0 2, ActiveColorset 12, Frame 2)
*DesktopManager: (10x30, Frame 0)
*DesktopManager: (70x30, Id desk3, Title "Four", Action (Mouse 1) GotoDesk 0 3, ActiveColorset 12, Frame 2)
*DesktopManager: (5x30, Frame 0)
*DesktopManager: (160x5, Frame 0)
*DesktopManager: (5x100, Frame 0)
*DesktopManager: (150x100, Swallow FvwmPager 'Module FvwmPager *', Frame 0)
*DesktopManager: (5x100, Frame 0)
*DesktopManager: (160x5, Frame 0)

DestroyModuleConfig Tray:*
*Tray: Geometry 160x20-3+203
*Tray: Colorset 10
*Tray: Rows 20
*Tray: Columns 160
*Tray: Frame 0
*Tray: Font "xft:Sans:Bold:size=12:antialias=True"
Test (x stalonetray) *Tray: (160x20, Swallow(NoClose,UseOld) \
    stalonetray 'Exec exec stalonetray --config \
    "$[FVWM_USERDIR]/.stalonetrayrc"', Frame 0)

DestroyModuleConfig ApplicationManager:*
*ApplicationManager: Geometry 160x492-3+243
*ApplicationManager: Colorset 10
*ApplicationManager: Rows 1
*ApplicationManager: Columns 1
*ApplicationManager: Frame 0
*ApplicationManager: Font "xft:Sans:Bold:size=12:antialias=True"
*ApplicationManager: (1x1, Top, Swallow FvwmIconMan 'Module FvwmIconMan', Frame 0)

DestroyModuleConfig Dock: *
*Dock: Geometry 160x108-3+755
*Dock: Colorset 10
*Dock: Rows 3
*Dock: Columns 3
*Dock: Frame 0
*Dock: Padding 0 0
*Dock: Font "xft:Sans:Bold:size=12:antialias=True"
*Dock: (1x1, Title "m", Action(Mouse 1) Menu MenuDock, ActiveColorset 12)
*Dock: (1x1, Title "e", Action(Mouse 1) Exec exec emacs, ActiveColorset 12)
*Dock: (1x1, Icon $[fvwm_icon]/apps/32x32/utilities-terminal.png, \
       Action(Mouse 1) Exec exec $[infostore.terminal], ActiveColorset 12)
*Dock: (1x1, Icon $[fvwm_icon]/places/32x32/user-home.png, \
       Action(Mouse 1) Exec exec caja, ActiveColorset 12)
*Dock: (1x1, Icon $[fvwm_icon]/apps/32x32/firefox.png, \
       Action(Mouse 1) Exec exec firefox, ActiveColorset 12)
*Dock: (1x1, Icon $[fvwm_icon]/apps/32x32/firefox.png, \
       Action(Mouse 1) Exec exec firefox, ActiveColorset 12)
*Dock: (1x1, Title "d", Action(Mouse 1) Exec exec discord, ActiveColorset 12)
*Dock: (1x1, Title "g", Action(Mouse 1) Exec exec gimp, ActiveColorset 12)
*Dock: (1x1, Title "", Action(Mouse 1) Nop, ActiveColorset 12)

DestroyModuleConfig AudioManager:*
*AudioManager: Geometry 160x56-3+883
*AudioManager: Colorset 10
*AudioManager: Rows 56
*AudioManager: Columns 160
*AudioManager: Frame 0
*AudioManager: Padding 0 0
*AudioManager: Font "xft:Sans:Bold:size=16:antialias=True"
*AudioManager: (160x24, Swallow FvwmPlayer 'Module FvwmScript FvwmScript-Player', Frame 0)
*AudioManager: (32x32, Title "⏮", Action (Mouse 1) Exec exec playerctl --player=strawberry,%any -s previous, ActiveColorset 12)
*AudioManager: (32x32, Title "⏯", Action (Mouse 1) Exec exec playerctl --player=strawberry,%any -s play-pause, ActiveColorset 12)
*AudioManager: (32x32, Title "⏹", Action (Mouse 1) Exec exec playerctl --player=strawberry,%any -s stop, ActiveColorset 12)
*AudioManager: (32x32, Title "⏭", Action (Mouse 1) Exec exec playerctl --player=strawberry,%any -s next, ActiveColorset 12)
*AudioManager: (32x32, Title "♫", Action (Mouse 1) Exec exec $[fvwm_music_player], ActiveColorset 12)

DestroyModuleConfig NotesManager:*
*NotesManager: Geometry 160x318-3+959
*NotesManager: Colorset 10
*NotesManager: Rows 1
*NotesManager: Columns 1
*NotesManager: Frame 0
*NotesManager: (1x1, Swallow FvwmNotes 'Exec exec $[fvwm_scripts]/notes')

DestroyModuleConfig StopwatchManager:*
*StopwatchManager: Geometry 160x90-3-103
*StopwatchManager: Colorset 10
*StopwatchManager: Rows 1
*StopwatchManager: Columns 1
*StopwatchManager: Frame 0
*StopwatchManager: (1x1, Swallow FvwmStopwatch 'Exec exec $[fvwm_scripts]/stopwatch')

DestroyModuleConfig Time:*
*Time: Geometry 160x80-3-3
*Time: Colorset 10
*Time: Rows 80
*Time: Columns 160
*Time: Frame 0
*Time: Font "xft:Sans:Bold:size=12:antialias=True"
*Time: (160x5, Frame 0)
*Time: (160x70, Swallow FvwmDateTime 'Module FvwmScript FvwmScript-DateTime',\
    Frame 0)
*Time: (160x5, Frame 0)

# FvwmPager
#
# This module displays the location of the windows on the various Pages
# and Desks. This is setup to show only the Pages on the current Desk.
DestroyModuleConfig FvwmPager:*
*FvwmPager: Colorset * 10
*FvwmPager: HilightColorset * 13
*FvwmPager: BalloonColorset * 10
*FvwmPager: WindowColorsets 10 11
*FvwmPager: Font None
*FvwmPager: Balloons All
*FvwmPager: BalloonFont "xft:Sans:Bold:size=10:antialias=True"
*FvwmPager: BallonYOffset +2
*FvwmPager: Window3dBorders
*FvwmPager: MiniIcons

# FvwmIconMan
#
# FvwmIconMan is a powerful tool to list and manage windows. This
# is used as the window list in the panel or taskbar.
DestroyModuleConfig FvwmIconMan:*
*FvwmIconMan: UseWinList true
*FvwmIconMan: ButtonGeometry 160x40
*FvwmIconMan: ManagerGeometry 1x1
*FvwmIconMan: Colorset 10
*FvwmIconMan: FocusColorset 11
*FvwmIconMan: IconColorset 14
*FvwmIconMan: FocusAndSelectColorset 12
*FvwmIconMan: SelectColorset 12
*FvwmIconMan: IconAndSelectColorset 12
*FvwmIconMan: DrawIcons always
*FvwmIconMan: ReliefThickness 0
*FvwmIconMan: Format "%t"
*FvwmIconMan: Font "xft:Sans:Bold:size=8:antialias=True"
*FvwmIconMan: Action Mouse 0 A ret
*FvwmIconMan: Action Mouse 1 A sendcommand IconManClick
*FvwmIconMan: Action Mouse 3 A sendcommand "Menu MenuIconOps"
*FvwmIconMan: Resolution desk
*FvwmIconMan: Tips needed
*FvwmIconMan: Sort id

# FvwmEvent
#
# FvwmEvent is a module that can run an action or function
# on specific events. This instance changes which desk number
# is highlighted when the desk is changed.
DestroyModuleConfig EventNewDesk:*
*EventNewDesk: PassID
*EventNewDesk: new_desk ChangeDesk

# FvwmForm
#
# FvwmForm is a module that can be used to build a GUI
# form. Used with fvwm-menu-desktop-config.fpl.
# This sets the default colorsets.
*FvwmFormDefault: Colorset 10
*FvwmFormDefault: ItemColorset 13

# Local configuration file. For use with the default-config.
#
# If $FVWMUSER_DIR/local.config ($HOME/.fvwm/local.config by default)
# exists, then read it. This allows changes to default-config settings
# without needing a full copy of the default-config. This will also allow
# default-config changes to get used after upgrades (if applicable).
Test (f $[FVWM_USERDIR]/local.config) Read $[FVWM_USERDIR]/local.config
