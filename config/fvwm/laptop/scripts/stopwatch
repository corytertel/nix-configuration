#!/usr/bin/env python
import tkinter as tk
import time

start_time = time.time()
# When pause_time is None, the timer is running
pause_time = start_time

def counter_label(label):
    def count():
        global pause_time
        global start_time

        if pause_time is None:
            cur_time = time.time() - start_time
            mins = int(cur_time / 60)
            secs = round(cur_time % 60)
            secs_str = str(secs) if secs >= 10 else "0" + str(secs)

            display = str(mins) + ":" + secs_str

            label['text'] = display

            label.after(1000, count)

    count()

def Start(label):
    global start_time
    global pause_time
    # need to ignore the pause time
    start_time = start_time + (time.time() - pause_time)
    pause_time = None

    counter_label(label)
    start['state']='disabled'
    pause['state']='normal'
    reset['state']='normal'

def Pause():
    global pause_time
    start['state']='normal'
    pause['state']='disabled'
    reset['state']='normal'
    pause_time = time.time()

def Reset(label):
    global start_time
    global pause_time
    start_time = time.time()

    # If reset is pressed after pressing pause.
    if pause_time is not None:
        reset['state']='disabled'

    label['text']='0:00'

root = tk.Tk()
root.title("Stopwatch")
root['background'] = '#003c3c'

# Fixing the window size.
root.minsize(width=160, height=90)
label = tk.Label(root, text="0:00", fg="white", bg='#003c3c', font="Sans 20 bold")
label.pack()
f = tk.Frame(root)
start = tk.Button(f, text='⏵', width=1, fg="white", bg='#003c3c', command=lambda:Start(label))
pause = tk.Button(f, text='⏸',width=1, fg="white", bg='#003c3c', state='disabled', command=Pause)
reset = tk.Button(f, text='⏮',width=1, fg="white", bg='#003c3c', state='disabled', command=lambda:Reset(label))
f.pack(anchor = 'center',pady=5)
start.pack(side="left")
pause.pack(side ="left")
reset.pack(side="left")
root.mainloop()
