// Dvorak

default partial alphanumeric_keys modifier_keys
xkb_symbols "basic" {

    name[Group1]= "English";

    key <TLDE> { [       grave,	asciitilde	] };

    key <AE01> { [       exclam, 1  	        ]	};
    key <AE02> { [           at, 2		]	};
    key <AE03> { [   numbersign, 3 	        ]	};
    key <AE04> { [       dollar, 4		]	};
    key <AE05> { [      percent, 5		]	};
    key <AE06> { [  asciicircum, 6              ]	};
    key <AE07> { [    ampersand, 7	        ]	};
    key <AE08> { [     asterisk, 8       	]	};
    key <AE09> { [  bracketleft, 9              ]	};
    key <AE10> { [ bracketright, 0	        ]	};
    key <AE11> { [    parenleft, braceleft	]	};
    key <AE12> { [   parenright, braceright     ] };

    key <AD01> { [  apostrophe,	quotedbl	] };
    key <AD02> { [	comma,	less    	] };
    key <AD03> { [      period,	greater 	] };
    key <AD04> { [	    p,	P, Page_Down, Page_Up	]	};
    key <AD05> { [	    y,	Y, Delete, Delete ]	};
    key <AD06> { [	    f,	F, Find, Find	]	};
    key <AD07> { [	    g,	G, Escape, Escape ]	};
    key <AD08> { [	    c,	C, Copy, Copy	]	};
    key <AD09> { [	    r,	R		]	};
    key <AD10> { [	    l,	L       	]	};
    key <AD11> { [      slash,  question 	]	};
    key <AD12> { [	equal,	plus		]	};

    key <AC01> { [	    a,	A, Home, Home 	]	};
    key <AC02> { [	    o,	O     		]	};
    key <AC03> { [	    e,	E, End, End	]	};
    key <AC04> { [	    u,	U		]	};
    key <AC05> { [	    i,	I, Help, Help	]	};
    key <AC06> { [	    d,	D, Left, Left   ]	};
    key <AC07> { [	    h,	H, Down, Down   ]	};
    key <AC08> { [	    t,	T, Up, Up	]	};
    key <AC09> { [	    n,	N, Right, Right ]	};
    key <AC10> { [	    s,	S		]	};
    key <AC11> { [	minus,	underscore	]	};

    key <AB01> { [	    q,	Q		]	};
    key <AB02> { [	    j,	J       	]	};
    key <AB03> { [	    k,	K		]	};
    key <AB04> { [	    x,	X, Cut, Cut	]	};
    key <AB05> { [	    less, greater	]	};
    key <AB06> { [	    b,	B       	]	};
    key <AB07> { [	    m,	M		]	};
    key <AB08> { [	    w,	W		]	};
    key <AB09> { [	    v,	V, Paste, Paste	]	};
    key <AB10> { [	    z,  Z, Undo, Redo	]	};

    // Trigger caps lock when both shifts are pressed
    key <LFSH> {
      type[Group1]="TWO_LEVEL",
      symbols[Group1] = [ Shift_L, Caps_Lock ]
    };
    key <RTSH> {
      type[Group1]="TWO_LEVEL",
      symbols[Group1] = [ Shift_R, Caps_Lock ]
    };
    
    // // Eliminate CapsLock, making it another Ctrl.
    // replace key <CAPS> { [ Control_L, Control_L ] };
    // modifier_map  Control { <CAPS>, <LCTL> };
    
    // Make capslock into escape
    key <CAPS> { [ Escape ], type[group1] = "ONE_LEVEL" };

    // Intl key
    key <LSGT>  { [ semicolon,   colon ] };
};
